// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.mihausik.bil.web;

import com.mihausik.bil.Abonstatistics;
import com.mihausik.bil.Callplan;
import com.mihausik.bil.Cdr;
import com.mihausik.bil.Client;
import com.mihausik.bil.ClientComments;
import com.mihausik.bil.Clientcontact;
import com.mihausik.bil.Clientcontacttype;
import com.mihausik.bil.Clientdata;
import com.mihausik.bil.Clientnotification;
import com.mihausik.bil.Clientnumdog;
import com.mihausik.bil.Clientservice;
import com.mihausik.bil.Clientservicecredit;
import com.mihausik.bil.Clientserviceip;
import com.mihausik.bil.Clientservicephone;
import com.mihausik.bil.Clientservicerecount;
import com.mihausik.bil.Clientservicestreet;
import com.mihausik.bil.Commentsocheredi;
import com.mihausik.bil.Commentszayavok;
import com.mihausik.bil.Commentszayavokremont;
import com.mihausik.bil.Commutator;
import com.mihausik.bil.Csbalancedate;
import com.mihausik.bil.Device;
import com.mihausik.bil.Devicetype;
import com.mihausik.bil.Dogovora;
import com.mihausik.bil.Doljnost;
import com.mihausik.bil.Manager;
import com.mihausik.bil.Ocherednapodkluchenie;
import com.mihausik.bil.Payment;
import com.mihausik.bil.Phone;
import com.mihausik.bil.Proverkatahvozm;
import com.mihausik.bil.Rate;
import com.mihausik.bil.Schet;
import com.mihausik.bil.Service;
import com.mihausik.bil.Sip;
import com.mihausik.bil.Statuslica;
import com.mihausik.bil.Supplier;
import com.mihausik.bil.Tempblock;
import com.mihausik.bil.Wish;
import com.mihausik.bil.Yurstatus;
import com.mihausik.bil.Zayavkanaremont;
import com.mihausik.bil.Citystreets;
import com.mihausik.bil.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<Citystreets, String> ApplicationConversionServiceFactoryBean.getCitystreetsToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mihausik.bil.Citystreets, java.lang.String>() {
            public String convert(Citystreets citystreets ) {
                return new StringBuilder().append(citystreets.getStreet()).toString();
            }
        };
    }

    public Converter<Long, Citystreets> ApplicationConversionServiceFactoryBean.getIdToCitystreetsConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mihausik.bil.Citystreets>() {
            public com.mihausik.bil.Citystreets convert(java.lang.Long id) {
                return Citystreets.findCitystreets(id);
            }
        };
    }

    public Converter<String, Citystreets> ApplicationConversionServiceFactoryBean.getStringToCitystreetsConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mihausik.bil.Citystreets>() {
            public com.mihausik.bil.Citystreets convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Citystreets.class);
            }
        };
    }

    
    public Converter<Abonstatistics, String> ApplicationConversionServiceFactoryBean.getAbonstatisticsToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mihausik.bil.Abonstatistics, java.lang.String>() {
            public String convert(Abonstatistics abonstatistics) {
                return new StringBuilder().append(abonstatistics.getDate()).append(' ').append(abonstatistics.getAbonquantitypodkl()).append(' ').append(abonstatistics.getAbonquantityotkl()).toString();
            }
        };
    }
    
    public Converter<Long, Abonstatistics> ApplicationConversionServiceFactoryBean.getIdToAbonstatisticsConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mihausik.bil.Abonstatistics>() {
            public com.mihausik.bil.Abonstatistics convert(java.lang.Long id) {
                return Abonstatistics.findAbonstatistics(id);
            }
        };
    }
    
    public Converter<String, Abonstatistics> ApplicationConversionServiceFactoryBean.getStringToAbonstatisticsConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mihausik.bil.Abonstatistics>() {
            public com.mihausik.bil.Abonstatistics convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Abonstatistics.class);
            }
        };
    }
    
    public Converter<Callplan, String> ApplicationConversionServiceFactoryBean.getCallplanToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mihausik.bil.Callplan, java.lang.String>() {
            public String convert(Callplan callplan) {
                return new StringBuilder().append(callplan.getName()).toString();
            }
        };
    }
    
    public Converter<Long, Callplan> ApplicationConversionServiceFactoryBean.getIdToCallplanConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mihausik.bil.Callplan>() {
            public com.mihausik.bil.Callplan convert(java.lang.Long id) {
                return Callplan.findCallplan(id);
            }
        };
    }
    
    public Converter<String, Callplan> ApplicationConversionServiceFactoryBean.getStringToCallplanConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mihausik.bil.Callplan>() {
            public com.mihausik.bil.Callplan convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Callplan.class);
            }
        };
    }
    
    public Converter<Cdr, String> ApplicationConversionServiceFactoryBean.getCdrToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mihausik.bil.Cdr, java.lang.String>() {
            public String convert(Cdr cdr) {
                return new StringBuilder().append(cdr.getDestination()).append(' ').append(cdr.getDuration()).append(' ').append(cdr.getSell()).append(' ').append(cdr.getSource()).toString();
            }
        };
    }
    
    public Converter<Long, Cdr> ApplicationConversionServiceFactoryBean.getIdToCdrConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mihausik.bil.Cdr>() {
            public com.mihausik.bil.Cdr convert(java.lang.Long id) {
                return Cdr.findCdr(id);
            }
        };
    }
    
    public Converter<String, Cdr> ApplicationConversionServiceFactoryBean.getStringToCdrConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mihausik.bil.Cdr>() {
            public com.mihausik.bil.Cdr convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Cdr.class);
            }
        };
    }
    
    public Converter<Client, String> ApplicationConversionServiceFactoryBean.getClientToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mihausik.bil.Client, java.lang.String>() {
            public String convert(Client client) {
                return new StringBuilder().append(client.getClientname()).append(' ').append(client.getNumberraschscheta()).append(' ').append(client.getBank()).append(' ').append(client.getMfo()).toString();
            }
        };
    }
    
    public Converter<Long, Client> ApplicationConversionServiceFactoryBean.getIdToClientConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mihausik.bil.Client>() {
            public com.mihausik.bil.Client convert(java.lang.Long id) {
                return Client.findClient(id);
            }
        };
    }
    
    public Converter<String, Client> ApplicationConversionServiceFactoryBean.getStringToClientConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mihausik.bil.Client>() {
            public com.mihausik.bil.Client convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Client.class);
            }
        };
    }
    
    public Converter<ClientComments, String> ApplicationConversionServiceFactoryBean.getClientCommentsToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mihausik.bil.ClientComments, java.lang.String>() {
            public String convert(ClientComments clientComments) {
                return new StringBuilder().append(clientComments.getComment()).toString();
            }
        };
    }
    
    public Converter<Long, ClientComments> ApplicationConversionServiceFactoryBean.getIdToClientCommentsConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mihausik.bil.ClientComments>() {
            public com.mihausik.bil.ClientComments convert(java.lang.Long id) {
                return ClientComments.findClientComments(id);
            }
        };
    }
    
    public Converter<String, ClientComments> ApplicationConversionServiceFactoryBean.getStringToClientCommentsConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mihausik.bil.ClientComments>() {
            public com.mihausik.bil.ClientComments convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), ClientComments.class);
            }
        };
    }
    
    public Converter<Clientcontact, String> ApplicationConversionServiceFactoryBean.getClientcontactToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mihausik.bil.Clientcontact, java.lang.String>() {
            public String convert(Clientcontact clientcontact) {
                return new StringBuilder().append(clientcontact.getContact()).toString();
            }
        };
    }
    
    public Converter<Long, Clientcontact> ApplicationConversionServiceFactoryBean.getIdToClientcontactConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mihausik.bil.Clientcontact>() {
            public com.mihausik.bil.Clientcontact convert(java.lang.Long id) {
                return Clientcontact.findClientcontact(id);
            }
        };
    }
    
    public Converter<String, Clientcontact> ApplicationConversionServiceFactoryBean.getStringToClientcontactConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mihausik.bil.Clientcontact>() {
            public com.mihausik.bil.Clientcontact convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Clientcontact.class);
            }
        };
    }
    
    public Converter<Clientcontacttype, String> ApplicationConversionServiceFactoryBean.getClientcontacttypeToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mihausik.bil.Clientcontacttype, java.lang.String>() {
            public String convert(Clientcontacttype clientcontacttype) {
                return new StringBuilder().append(clientcontacttype.getContacttype()).toString();
            }
        };
    }
    
    public Converter<Long, Clientcontacttype> ApplicationConversionServiceFactoryBean.getIdToClientcontacttypeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mihausik.bil.Clientcontacttype>() {
            public com.mihausik.bil.Clientcontacttype convert(java.lang.Long id) {
                return Clientcontacttype.findClientcontacttype(id);
            }
        };
    }
    
    public Converter<String, Clientcontacttype> ApplicationConversionServiceFactoryBean.getStringToClientcontacttypeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mihausik.bil.Clientcontacttype>() {
            public com.mihausik.bil.Clientcontacttype convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Clientcontacttype.class);
            }
        };
    }
    
    public Converter<Clientdata, String> ApplicationConversionServiceFactoryBean.getClientdataToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mihausik.bil.Clientdata, java.lang.String>() {
            public String convert(Clientdata clientdata) {
                return new StringBuilder().append(clientdata.getContact()).append(' ').append(clientdata.getFio()).append(' ').append(clientdata.getDoljnost()).toString();
            }
        };
    }
    
    public Converter<Long, Clientdata> ApplicationConversionServiceFactoryBean.getIdToClientdataConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mihausik.bil.Clientdata>() {
            public com.mihausik.bil.Clientdata convert(java.lang.Long id) {
                return Clientdata.findClientdata(id);
            }
        };
    }
    
    public Converter<String, Clientdata> ApplicationConversionServiceFactoryBean.getStringToClientdataConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mihausik.bil.Clientdata>() {
            public com.mihausik.bil.Clientdata convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Clientdata.class);
            }
        };
    }
    
    public Converter<Clientnotification, String> ApplicationConversionServiceFactoryBean.getClientnotificationToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mihausik.bil.Clientnotification, java.lang.String>() {
            public String convert(Clientnotification clientnotification) {
                return new StringBuilder().append(clientnotification.getContact()).append(' ').append(clientnotification.getNotificationsum()).toString();
            }
        };
    }
    
    public Converter<Long, Clientnotification> ApplicationConversionServiceFactoryBean.getIdToClientnotificationConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mihausik.bil.Clientnotification>() {
            public com.mihausik.bil.Clientnotification convert(java.lang.Long id) {
                return Clientnotification.findClientnotification(id);
            }
        };
    }
    
    public Converter<String, Clientnotification> ApplicationConversionServiceFactoryBean.getStringToClientnotificationConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mihausik.bil.Clientnotification>() {
            public com.mihausik.bil.Clientnotification convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Clientnotification.class);
            }
        };
    }
    
    public Converter<Clientnumdog, String> ApplicationConversionServiceFactoryBean.getClientnumdogToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mihausik.bil.Clientnumdog, java.lang.String>() {
            public String convert(Clientnumdog clientnumdog) {
                return new StringBuilder().append(clientnumdog.getNomerdogovora()).append(' ').append(clientnumdog.getDatazaklucheniya()).toString();
            }
        };
    }
    
    public Converter<Long, Clientnumdog> ApplicationConversionServiceFactoryBean.getIdToClientnumdogConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mihausik.bil.Clientnumdog>() {
            public com.mihausik.bil.Clientnumdog convert(java.lang.Long id) {
                return Clientnumdog.findClientnumdog(id);
            }
        };
    }
    
    public Converter<String, Clientnumdog> ApplicationConversionServiceFactoryBean.getStringToClientnumdogConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mihausik.bil.Clientnumdog>() {
            public com.mihausik.bil.Clientnumdog convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Clientnumdog.class);
            }
        };
    }
    
    public Converter<Clientservice, String> ApplicationConversionServiceFactoryBean.getClientserviceToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mihausik.bil.Clientservice, java.lang.String>() {
            public String convert(Clientservice clientservice) {
                return new StringBuilder().append(clientservice.getBalance()).append(' ').append(clientservice.getAddresspreduslugi()).append(' ').append(clientservice.getIp()).append(' ').append(clientservice.getSpeed()).toString();
            }
        };
    }
    
    public Converter<Long, Clientservice> ApplicationConversionServiceFactoryBean.getIdToClientserviceConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mihausik.bil.Clientservice>() {
            public com.mihausik.bil.Clientservice convert(java.lang.Long id) {
                return Clientservice.findClientservice(id);
            }
        };
    }
    
    public Converter<String, Clientservice> ApplicationConversionServiceFactoryBean.getStringToClientserviceConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mihausik.bil.Clientservice>() {
            public com.mihausik.bil.Clientservice convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Clientservice.class);
            }
        };
    }
    
    public Converter<Clientservicecredit, String> ApplicationConversionServiceFactoryBean.getClientservicecreditToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mihausik.bil.Clientservicecredit, java.lang.String>() {
            public String convert(Clientservicecredit clientservicecredit) {
                return new StringBuilder().append(clientservicecredit.getCredit()).append(' ').append(clientservicecredit.getDatastartcredit()).append(' ').append(clientservicecredit.getDatastopcredit()).toString();
            }
        };
    }
    
    public Converter<Long, Clientservicecredit> ApplicationConversionServiceFactoryBean.getIdToClientservicecreditConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mihausik.bil.Clientservicecredit>() {
            public com.mihausik.bil.Clientservicecredit convert(java.lang.Long id) {
                return Clientservicecredit.findClientservicecredit(id);
            }
        };
    }
    
    public Converter<String, Clientservicecredit> ApplicationConversionServiceFactoryBean.getStringToClientservicecreditConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mihausik.bil.Clientservicecredit>() {
            public com.mihausik.bil.Clientservicecredit convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Clientservicecredit.class);
            }
        };
    }
    
    public Converter<Clientserviceip, String> ApplicationConversionServiceFactoryBean.getClientserviceipToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mihausik.bil.Clientserviceip, java.lang.String>() {
            public String convert(Clientserviceip clientserviceip) {
                return new StringBuilder().append(clientserviceip.getIp()).append(' ').append(clientserviceip.getMask()).append(' ').append(clientserviceip.getGateway()).append(' ').append(clientserviceip.getMacaddr()).toString();
            }
        };
    }
    
    public Converter<Long, Clientserviceip> ApplicationConversionServiceFactoryBean.getIdToClientserviceipConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mihausik.bil.Clientserviceip>() {
            public com.mihausik.bil.Clientserviceip convert(java.lang.Long id) {
                return Clientserviceip.findClientserviceip(id);
            }
        };
    }
    
    public Converter<String, Clientserviceip> ApplicationConversionServiceFactoryBean.getStringToClientserviceipConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mihausik.bil.Clientserviceip>() {
            public com.mihausik.bil.Clientserviceip convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Clientserviceip.class);
            }
        };
    }
    
    public Converter<Clientservicephone, String> ApplicationConversionServiceFactoryBean.getClientservicephoneToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mihausik.bil.Clientservicephone, java.lang.String>() {
            public String convert(Clientservicephone clientservicephone) {
                return new StringBuilder().append(clientservicephone.getPhonenum()).append(' ').append(clientservicephone.getDatavklucheniya()).toString();
            }
        };
    }
    
    public Converter<Long, Clientservicephone> ApplicationConversionServiceFactoryBean.getIdToClientservicephoneConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mihausik.bil.Clientservicephone>() {
            public com.mihausik.bil.Clientservicephone convert(java.lang.Long id) {
                return Clientservicephone.findClientservicephone(id);
            }
        };
    }
    
    public Converter<String, Clientservicephone> ApplicationConversionServiceFactoryBean.getStringToClientservicephoneConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mihausik.bil.Clientservicephone>() {
            public com.mihausik.bil.Clientservicephone convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Clientservicephone.class);
            }
        };
    }
    
    public Converter<Clientservicerecount, String> ApplicationConversionServiceFactoryBean.getClientservicerecountToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mihausik.bil.Clientservicerecount, java.lang.String>() {
            public String convert(Clientservicerecount clientservicerecount) {
                return new StringBuilder().append(clientservicerecount.getDatastartrecount()).append(' ').append(clientservicerecount.getDatastoprecount()).append(' ').append(clientservicerecount.getStatus()).append(' ').append(clientservicerecount.getNumdays()).toString();
            }
        };
    }
    
    public Converter<Long, Clientservicerecount> ApplicationConversionServiceFactoryBean.getIdToClientservicerecountConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mihausik.bil.Clientservicerecount>() {
            public com.mihausik.bil.Clientservicerecount convert(java.lang.Long id) {
                return Clientservicerecount.findClientservicerecount(id);
            }
        };
    }
    
    public Converter<String, Clientservicerecount> ApplicationConversionServiceFactoryBean.getStringToClientservicerecountConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mihausik.bil.Clientservicerecount>() {
            public com.mihausik.bil.Clientservicerecount convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Clientservicerecount.class);
            }
        };
    }
    
    public Converter<Clientservicestreet, String> ApplicationConversionServiceFactoryBean.getClientservicestreetToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mihausik.bil.Clientservicestreet, java.lang.String>() {
            public String convert(Clientservicestreet clientservicestreet) {
                return new StringBuilder().append(clientservicestreet.getHousenum()).append(' ').append(clientservicestreet.getCity()).append(' ').append(clientservicestreet.getAppartment()).toString();
            }
        };
    }
    
    public Converter<Long, Clientservicestreet> ApplicationConversionServiceFactoryBean.getIdToClientservicestreetConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mihausik.bil.Clientservicestreet>() {
            public com.mihausik.bil.Clientservicestreet convert(java.lang.Long id) {
                return Clientservicestreet.findClientservicestreet(id);
            }
        };
    }
    
    public Converter<String, Clientservicestreet> ApplicationConversionServiceFactoryBean.getStringToClientservicestreetConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mihausik.bil.Clientservicestreet>() {
            public com.mihausik.bil.Clientservicestreet convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Clientservicestreet.class);
            }
        };
    }
    
    public Converter<Commentsocheredi, String> ApplicationConversionServiceFactoryBean.getCommentsocherediToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mihausik.bil.Commentsocheredi, java.lang.String>() {
            public String convert(Commentsocheredi commentsocheredi) {
                return new StringBuilder().append(commentsocheredi.getComment()).toString();
            }
        };
    }
    
    public Converter<Long, Commentsocheredi> ApplicationConversionServiceFactoryBean.getIdToCommentsocherediConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mihausik.bil.Commentsocheredi>() {
            public com.mihausik.bil.Commentsocheredi convert(java.lang.Long id) {
                return Commentsocheredi.findCommentsocheredi(id);
            }
        };
    }
    
    public Converter<String, Commentsocheredi> ApplicationConversionServiceFactoryBean.getStringToCommentsocherediConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mihausik.bil.Commentsocheredi>() {
            public com.mihausik.bil.Commentsocheredi convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Commentsocheredi.class);
            }
        };
    }
    
    public Converter<Commentszayavok, String> ApplicationConversionServiceFactoryBean.getCommentszayavokToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mihausik.bil.Commentszayavok, java.lang.String>() {
            public String convert(Commentszayavok commentszayavok) {
                return new StringBuilder().append(commentszayavok.getComment()).append(' ').append(commentszayavok.getDatacommenta()).toString();
            }
        };
    }
    
    public Converter<Long, Commentszayavok> ApplicationConversionServiceFactoryBean.getIdToCommentszayavokConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mihausik.bil.Commentszayavok>() {
            public com.mihausik.bil.Commentszayavok convert(java.lang.Long id) {
                return Commentszayavok.findCommentszayavok(id);
            }
        };
    }
    
    public Converter<String, Commentszayavok> ApplicationConversionServiceFactoryBean.getStringToCommentszayavokConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mihausik.bil.Commentszayavok>() {
            public com.mihausik.bil.Commentszayavok convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Commentszayavok.class);
            }
        };
    }
    
    public Converter<Commentszayavokremont, String> ApplicationConversionServiceFactoryBean.getCommentszayavokremontToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mihausik.bil.Commentszayavokremont, java.lang.String>() {
            public String convert(Commentszayavokremont commentszayavokremont) {
                return new StringBuilder().append(commentszayavokremont.getComment()).toString();
            }
        };
    }
    
    public Converter<Long, Commentszayavokremont> ApplicationConversionServiceFactoryBean.getIdToCommentszayavokremontConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mihausik.bil.Commentszayavokremont>() {
            public com.mihausik.bil.Commentszayavokremont convert(java.lang.Long id) {
                return Commentszayavokremont.findCommentszayavokremont(id);
            }
        };
    }
    
    public Converter<String, Commentszayavokremont> ApplicationConversionServiceFactoryBean.getStringToCommentszayavokremontConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mihausik.bil.Commentszayavokremont>() {
            public com.mihausik.bil.Commentszayavokremont convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Commentszayavokremont.class);
            }
        };
    }
    
    public Converter<Commutator, String> ApplicationConversionServiceFactoryBean.getCommutatorToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mihausik.bil.Commutator, java.lang.String>() {
            public String convert(Commutator commutator) {
                return new StringBuilder().append(commutator.getComname()).append(' ').append(commutator.getKolportov()).append(' ').append(commutator.getDescription()).toString();
            }
        };
    }
    
    public Converter<Long, Commutator> ApplicationConversionServiceFactoryBean.getIdToCommutatorConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mihausik.bil.Commutator>() {
            public com.mihausik.bil.Commutator convert(java.lang.Long id) {
                return Commutator.findCommutator(id);
            }
        };
    }
    
    public Converter<String, Commutator> ApplicationConversionServiceFactoryBean.getStringToCommutatorConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mihausik.bil.Commutator>() {
            public com.mihausik.bil.Commutator convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Commutator.class);
            }
        };
    }
    
    public Converter<Csbalancedate, String> ApplicationConversionServiceFactoryBean.getCsbalancedateToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mihausik.bil.Csbalancedate, java.lang.String>() {
            public String convert(Csbalancedate csbalancedate) {
                return new StringBuilder().append(csbalancedate.getDate()).append(' ').append(csbalancedate.getBalance()).toString();
            }
        };
    }
    
    public Converter<Long, Csbalancedate> ApplicationConversionServiceFactoryBean.getIdToCsbalancedateConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mihausik.bil.Csbalancedate>() {
            public com.mihausik.bil.Csbalancedate convert(java.lang.Long id) {
                return Csbalancedate.findCsbalancedate(id);
            }
        };
    }
    
    public Converter<String, Csbalancedate> ApplicationConversionServiceFactoryBean.getStringToCsbalancedateConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mihausik.bil.Csbalancedate>() {
            public com.mihausik.bil.Csbalancedate convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Csbalancedate.class);
            }
        };
    }
    
    public Converter<Device, String> ApplicationConversionServiceFactoryBean.getDeviceToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mihausik.bil.Device, java.lang.String>() {
            public String convert(Device device) {
                return new StringBuilder().append(device.getDevname()).append(' ').append(device.getSerialnum()).append(' ').append(device.getPrice()).toString();
            }
        };
    }
    
    public Converter<Long, Device> ApplicationConversionServiceFactoryBean.getIdToDeviceConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mihausik.bil.Device>() {
            public com.mihausik.bil.Device convert(java.lang.Long id) {
                return Device.findDevice(id);
            }
        };
    }
    
    public Converter<String, Device> ApplicationConversionServiceFactoryBean.getStringToDeviceConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mihausik.bil.Device>() {
            public com.mihausik.bil.Device convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Device.class);
            }
        };
    }
    
    public Converter<Devicetype, String> ApplicationConversionServiceFactoryBean.getDevicetypeToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mihausik.bil.Devicetype, java.lang.String>() {
            public String convert(Devicetype devicetype) {
                return new StringBuilder().append(devicetype.getDevtype()).toString();
            }
        };
    }
    
    public Converter<Long, Devicetype> ApplicationConversionServiceFactoryBean.getIdToDevicetypeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mihausik.bil.Devicetype>() {
            public com.mihausik.bil.Devicetype convert(java.lang.Long id) {
                return Devicetype.findDevicetype(id);
            }
        };
    }
    
    public Converter<String, Devicetype> ApplicationConversionServiceFactoryBean.getStringToDevicetypeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mihausik.bil.Devicetype>() {
            public com.mihausik.bil.Devicetype convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Devicetype.class);
            }
        };
    }
    
    public Converter<Dogovora, String> ApplicationConversionServiceFactoryBean.getDogovoraToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mihausik.bil.Dogovora, java.lang.String>() {
            public String convert(Dogovora dogovora) {
                return new StringBuilder().append(dogovora.getNomerdogovora()).append(' ').append(dogovora.getDatadogovora()).append(' ').append(dogovora.getContragent()).append(' ').append(dogovora.getNazvaniedog()).toString();
            }
        };
    }
    
    public Converter<Long, Dogovora> ApplicationConversionServiceFactoryBean.getIdToDogovoraConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mihausik.bil.Dogovora>() {
            public com.mihausik.bil.Dogovora convert(java.lang.Long id) {
                return Dogovora.findDogovora(id);
            }
        };
    }
    
    public Converter<String, Dogovora> ApplicationConversionServiceFactoryBean.getStringToDogovoraConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mihausik.bil.Dogovora>() {
            public com.mihausik.bil.Dogovora convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Dogovora.class);
            }
        };
    }
    
    public Converter<Doljnost, String> ApplicationConversionServiceFactoryBean.getDoljnostToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mihausik.bil.Doljnost, java.lang.String>() {
            public String convert(Doljnost doljnost) {
                return new StringBuilder().append(doljnost.getDolname()).append(' ').append(doljnost.getRolename()).toString();
            }
        };
    }
    
    public Converter<Long, Doljnost> ApplicationConversionServiceFactoryBean.getIdToDoljnostConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mihausik.bil.Doljnost>() {
            public com.mihausik.bil.Doljnost convert(java.lang.Long id) {
                return Doljnost.findDoljnost(id);
            }
        };
    }
    
    public Converter<String, Doljnost> ApplicationConversionServiceFactoryBean.getStringToDoljnostConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mihausik.bil.Doljnost>() {
            public com.mihausik.bil.Doljnost convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Doljnost.class);
            }
        };
    }
    
    public Converter<Manager, String> ApplicationConversionServiceFactoryBean.getManagerToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mihausik.bil.Manager, java.lang.String>() {
            public String convert(Manager manager) {
                return new StringBuilder().append(manager.getManname()).append(' ').append(manager.getPassword()).append(' ').append(manager.getLogin()).toString();
            }
        };
    }
    
    public Converter<Long, Manager> ApplicationConversionServiceFactoryBean.getIdToManagerConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mihausik.bil.Manager>() {
            public com.mihausik.bil.Manager convert(java.lang.Long id) {
                return Manager.findManager(id);
            }
        };
    }
    
    public Converter<String, Manager> ApplicationConversionServiceFactoryBean.getStringToManagerConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mihausik.bil.Manager>() {
            public com.mihausik.bil.Manager convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Manager.class);
            }
        };
    }
    
    public Converter<Ocherednapodkluchenie, String> ApplicationConversionServiceFactoryBean.getOcherednapodkluchenieToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mihausik.bil.Ocherednapodkluchenie, java.lang.String>() {
            public String convert(Ocherednapodkluchenie ocherednapodkluchenie) {
                return new StringBuilder().append(ocherednapodkluchenie.getDatapodkluchenia()).append(' ').append(ocherednapodkluchenie.getDeadlinedate()).toString();
            }
        };
    }
    
    public Converter<Long, Ocherednapodkluchenie> ApplicationConversionServiceFactoryBean.getIdToOcherednapodkluchenieConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mihausik.bil.Ocherednapodkluchenie>() {
            public com.mihausik.bil.Ocherednapodkluchenie convert(java.lang.Long id) {
                return Ocherednapodkluchenie.findOcherednapodkluchenie(id);
            }
        };
    }
    
    public Converter<String, Ocherednapodkluchenie> ApplicationConversionServiceFactoryBean.getStringToOcherednapodkluchenieConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mihausik.bil.Ocherednapodkluchenie>() {
            public com.mihausik.bil.Ocherednapodkluchenie convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Ocherednapodkluchenie.class);
            }
        };
    }
    
    public Converter<Payment, String> ApplicationConversionServiceFactoryBean.getPaymentToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mihausik.bil.Payment, java.lang.String>() {
            public String convert(Payment payment) {
                return new StringBuilder().append(payment.getSumma()).append(' ').append(payment.getDataplateja()).append(' ').append(payment.getDescription()).toString();
            }
        };
    }
    
    public Converter<Long, Payment> ApplicationConversionServiceFactoryBean.getIdToPaymentConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mihausik.bil.Payment>() {
            public com.mihausik.bil.Payment convert(java.lang.Long id) {
                return Payment.findPayment(id);
            }
        };
    }
    
    public Converter<String, Payment> ApplicationConversionServiceFactoryBean.getStringToPaymentConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mihausik.bil.Payment>() {
            public com.mihausik.bil.Payment convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Payment.class);
            }
        };
    }
    
    public Converter<Phone, String> ApplicationConversionServiceFactoryBean.getPhoneToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mihausik.bil.Phone, java.lang.String>() {
            public String convert(Phone phone) {
                return new StringBuilder().append(phone.getPhonenumber()).toString();
            }
        };
    }
    
    public Converter<Long, Phone> ApplicationConversionServiceFactoryBean.getIdToPhoneConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mihausik.bil.Phone>() {
            public com.mihausik.bil.Phone convert(java.lang.Long id) {
                return Phone.findPhone(id);
            }
        };
    }
    
    public Converter<String, Phone> ApplicationConversionServiceFactoryBean.getStringToPhoneConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mihausik.bil.Phone>() {
            public com.mihausik.bil.Phone convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Phone.class);
            }
        };
    }
    
    public Converter<Proverkatahvozm, String> ApplicationConversionServiceFactoryBean.getProverkatahvozmToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mihausik.bil.Proverkatahvozm, java.lang.String>() {
            public String convert(Proverkatahvozm proverkatahvozm) {
                return new StringBuilder().append(proverkatahvozm.getPotencialclient()).append(' ').append(proverkatahvozm.getAddrpodcluchenia()).append(' ').append(proverkatahvozm.getClientcontacts()).append(' ').append(proverkatahvozm.getStoimostpodkluchenia()).toString();
            }
        };
    }
    
    public Converter<Long, Proverkatahvozm> ApplicationConversionServiceFactoryBean.getIdToProverkatahvozmConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mihausik.bil.Proverkatahvozm>() {
            public com.mihausik.bil.Proverkatahvozm convert(java.lang.Long id) {
                return Proverkatahvozm.findProverkatahvozm(id);
            }
        };
    }
    
    public Converter<String, Proverkatahvozm> ApplicationConversionServiceFactoryBean.getStringToProverkatahvozmConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mihausik.bil.Proverkatahvozm>() {
            public com.mihausik.bil.Proverkatahvozm convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Proverkatahvozm.class);
            }
        };
    }
    
    public Converter<Rate, String> ApplicationConversionServiceFactoryBean.getRateToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mihausik.bil.Rate, java.lang.String>() {
            public String convert(Rate rate) {
                return new StringBuilder().append(rate.getBuy()).append(' ').append(rate.getName()).append(' ').append(rate.getPrefix()).append(' ').append(rate.getSell()).toString();
            }
        };
    }
    
    public Converter<Long, Rate> ApplicationConversionServiceFactoryBean.getIdToRateConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mihausik.bil.Rate>() {
            public com.mihausik.bil.Rate convert(java.lang.Long id) {
                return Rate.findRate(id);
            }
        };
    }
    
    public Converter<String, Rate> ApplicationConversionServiceFactoryBean.getStringToRateConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mihausik.bil.Rate>() {
            public com.mihausik.bil.Rate convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Rate.class);
            }
        };
    }
    
    public Converter<Schet, String> ApplicationConversionServiceFactoryBean.getSchetToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mihausik.bil.Schet, java.lang.String>() {
            public String convert(Schet schet) {
                return new StringBuilder().append(schet.getContentType()).append(' ').append(schet.getFilesize()).append(' ').append(schet.getFilepath()).append(' ').append(schet.getFilename()).toString();
            }
        };
    }
    
    public Converter<Long, Schet> ApplicationConversionServiceFactoryBean.getIdToSchetConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mihausik.bil.Schet>() {
            public com.mihausik.bil.Schet convert(java.lang.Long id) {
                return Schet.findSchet(id);
            }
        };
    }
    
    public Converter<String, Schet> ApplicationConversionServiceFactoryBean.getStringToSchetConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mihausik.bil.Schet>() {
            public com.mihausik.bil.Schet convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Schet.class);
            }
        };
    }
    
    public Converter<Service, String> ApplicationConversionServiceFactoryBean.getServiceToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mihausik.bil.Service, java.lang.String>() {
            public String convert(Service service) {
                return new StringBuilder().append(service.getName()).append(' ').append(service.getPrice()).toString();
            }
        };
    }
    
    public Converter<Long, Service> ApplicationConversionServiceFactoryBean.getIdToServiceConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mihausik.bil.Service>() {
            public com.mihausik.bil.Service convert(java.lang.Long id) {
                return Service.findService(id);
            }
        };
    }
    
    public Converter<String, Service> ApplicationConversionServiceFactoryBean.getStringToServiceConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mihausik.bil.Service>() {
            public com.mihausik.bil.Service convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Service.class);
            }
        };
    }
    
    public Converter<Sip, String> ApplicationConversionServiceFactoryBean.getSipToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mihausik.bil.Sip, java.lang.String>() {
            public String convert(Sip sip) {
                return new StringBuilder().append(sip.getCallerid()).append(' ').append(sip.getCallgroup()).append(' ').append(sip.getContext()).append(' ').append(sip.getDefaultuser()).toString();
            }
        };
    }
    
    public Converter<Long, Sip> ApplicationConversionServiceFactoryBean.getIdToSipConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mihausik.bil.Sip>() {
            public com.mihausik.bil.Sip convert(java.lang.Long id) {
                return Sip.findSip(id);
            }
        };
    }
    
    public Converter<String, Sip> ApplicationConversionServiceFactoryBean.getStringToSipConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mihausik.bil.Sip>() {
            public com.mihausik.bil.Sip convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Sip.class);
            }
        };
    }
    
    public Converter<Statuslica, String> ApplicationConversionServiceFactoryBean.getStatuslicaToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mihausik.bil.Statuslica, java.lang.String>() {
            public String convert(Statuslica statuslica) {
                return new StringBuilder().append(statuslica.getName()).toString();
            }
        };
    }
    
    public Converter<Long, Statuslica> ApplicationConversionServiceFactoryBean.getIdToStatuslicaConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mihausik.bil.Statuslica>() {
            public com.mihausik.bil.Statuslica convert(java.lang.Long id) {
                return Statuslica.findStatuslica(id);
            }
        };
    }
    
    public Converter<String, Statuslica> ApplicationConversionServiceFactoryBean.getStringToStatuslicaConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mihausik.bil.Statuslica>() {
            public com.mihausik.bil.Statuslica convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Statuslica.class);
            }
        };
    }
    
    public Converter<Supplier, String> ApplicationConversionServiceFactoryBean.getSupplierToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mihausik.bil.Supplier, java.lang.String>() {
            public String convert(Supplier supplier) {
                return new StringBuilder().append(supplier.getName()).toString();
            }
        };
    }
    
    public Converter<Long, Supplier> ApplicationConversionServiceFactoryBean.getIdToSupplierConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mihausik.bil.Supplier>() {
            public com.mihausik.bil.Supplier convert(java.lang.Long id) {
                return Supplier.findSupplier(id);
            }
        };
    }
    
    public Converter<String, Supplier> ApplicationConversionServiceFactoryBean.getStringToSupplierConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mihausik.bil.Supplier>() {
            public com.mihausik.bil.Supplier convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Supplier.class);
            }
        };
    }
    
    public Converter<Tempblock, String> ApplicationConversionServiceFactoryBean.getTempblockToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mihausik.bil.Tempblock, java.lang.String>() {
            public String convert(Tempblock tempblock) {
                return new StringBuilder().append(tempblock.getStartblock()).append(' ').append(tempblock.getStopblock()).toString();
            }
        };
    }
    
    public Converter<Long, Tempblock> ApplicationConversionServiceFactoryBean.getIdToTempblockConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mihausik.bil.Tempblock>() {
            public com.mihausik.bil.Tempblock convert(java.lang.Long id) {
                return Tempblock.findTempblock(id);
            }
        };
    }
    
    public Converter<String, Tempblock> ApplicationConversionServiceFactoryBean.getStringToTempblockConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mihausik.bil.Tempblock>() {
            public com.mihausik.bil.Tempblock convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Tempblock.class);
            }
        };
    }
    
    public Converter<Wish, String> ApplicationConversionServiceFactoryBean.getWishToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mihausik.bil.Wish, java.lang.String>() {
            public String convert(Wish wish) {
                return new StringBuilder().append(wish.getWishname()).toString();
            }
        };
    }
    
    public Converter<Long, Wish> ApplicationConversionServiceFactoryBean.getIdToWishConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mihausik.bil.Wish>() {
            public com.mihausik.bil.Wish convert(java.lang.Long id) {
                return Wish.findWish(id);
            }
        };
    }
    
    public Converter<String, Wish> ApplicationConversionServiceFactoryBean.getStringToWishConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mihausik.bil.Wish>() {
            public com.mihausik.bil.Wish convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Wish.class);
            }
        };
    }
    
    public Converter<Yurstatus, String> ApplicationConversionServiceFactoryBean.getYurstatusToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mihausik.bil.Yurstatus, java.lang.String>() {
            public String convert(Yurstatus yurstatus) {
                return new StringBuilder().append(yurstatus.getStatusname()).toString();
            }
        };
    }
    
    public Converter<Long, Yurstatus> ApplicationConversionServiceFactoryBean.getIdToYurstatusConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mihausik.bil.Yurstatus>() {
            public com.mihausik.bil.Yurstatus convert(java.lang.Long id) {
                return Yurstatus.findYurstatus(id);
            }
        };
    }
    
    public Converter<String, Yurstatus> ApplicationConversionServiceFactoryBean.getStringToYurstatusConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mihausik.bil.Yurstatus>() {
            public com.mihausik.bil.Yurstatus convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Yurstatus.class);
            }
        };
    }
    
    public Converter<Zayavkanaremont, String> ApplicationConversionServiceFactoryBean.getZayavkanaremontToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mihausik.bil.Zayavkanaremont, java.lang.String>() {
            public String convert(Zayavkanaremont zayavkanaremont) {
                return new StringBuilder().append(zayavkanaremont.getDataoformleniya()).append(' ').append(zayavkanaremont.getMessage()).toString();
            }
        };
    }
    
    public Converter<Long, Zayavkanaremont> ApplicationConversionServiceFactoryBean.getIdToZayavkanaremontConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mihausik.bil.Zayavkanaremont>() {
            public com.mihausik.bil.Zayavkanaremont convert(java.lang.Long id) {
                return Zayavkanaremont.findZayavkanaremont(id);
            }
        };
    }
    
    public Converter<String, Zayavkanaremont> ApplicationConversionServiceFactoryBean.getStringToZayavkanaremontConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mihausik.bil.Zayavkanaremont>() {
            public com.mihausik.bil.Zayavkanaremont convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Zayavkanaremont.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getAbonstatisticsToStringConverter());
        registry.addConverter(getIdToAbonstatisticsConverter());
        registry.addConverter(getStringToAbonstatisticsConverter());
        registry.addConverter(getCitystreetsToStringConverter());
        registry.addConverter(getIdToCitystreetsConverter());
        registry.addConverter(getStringToCitystreetsConverter());
        registry.addConverter(getCallplanToStringConverter());
        registry.addConverter(getIdToCallplanConverter());
        registry.addConverter(getStringToCallplanConverter());
        registry.addConverter(getCdrToStringConverter());
        registry.addConverter(getIdToCdrConverter());
        registry.addConverter(getStringToCdrConverter());
        registry.addConverter(getClientToStringConverter());
        registry.addConverter(getIdToClientConverter());
        registry.addConverter(getStringToClientConverter());
        registry.addConverter(getClientCommentsToStringConverter());
        registry.addConverter(getIdToClientCommentsConverter());
        registry.addConverter(getStringToClientCommentsConverter());
        registry.addConverter(getClientcontactToStringConverter());
        registry.addConverter(getIdToClientcontactConverter());
        registry.addConverter(getStringToClientcontactConverter());
        registry.addConverter(getClientcontacttypeToStringConverter());
        registry.addConverter(getIdToClientcontacttypeConverter());
        registry.addConverter(getStringToClientcontacttypeConverter());
        registry.addConverter(getClientdataToStringConverter());
        registry.addConverter(getIdToClientdataConverter());
        registry.addConverter(getStringToClientdataConverter());
        registry.addConverter(getClientnotificationToStringConverter());
        registry.addConverter(getIdToClientnotificationConverter());
        registry.addConverter(getStringToClientnotificationConverter());
        registry.addConverter(getClientnumdogToStringConverter());
        registry.addConverter(getIdToClientnumdogConverter());
        registry.addConverter(getStringToClientnumdogConverter());
        registry.addConverter(getClientserviceToStringConverter());
        registry.addConverter(getIdToClientserviceConverter());
        registry.addConverter(getStringToClientserviceConverter());
        registry.addConverter(getClientservicecreditToStringConverter());
        registry.addConverter(getIdToClientservicecreditConverter());
        registry.addConverter(getStringToClientservicecreditConverter());
        registry.addConverter(getClientserviceipToStringConverter());
        registry.addConverter(getIdToClientserviceipConverter());
        registry.addConverter(getStringToClientserviceipConverter());
        registry.addConverter(getClientservicephoneToStringConverter());
        registry.addConverter(getIdToClientservicephoneConverter());
        registry.addConverter(getStringToClientservicephoneConverter());
        registry.addConverter(getClientservicerecountToStringConverter());
        registry.addConverter(getIdToClientservicerecountConverter());
        registry.addConverter(getStringToClientservicerecountConverter());
        registry.addConverter(getClientservicestreetToStringConverter());
        registry.addConverter(getIdToClientservicestreetConverter());
        registry.addConverter(getStringToClientservicestreetConverter());
        registry.addConverter(getCommentsocherediToStringConverter());
        registry.addConverter(getIdToCommentsocherediConverter());
        registry.addConverter(getStringToCommentsocherediConverter());
        registry.addConverter(getCommentszayavokToStringConverter());
        registry.addConverter(getIdToCommentszayavokConverter());
        registry.addConverter(getStringToCommentszayavokConverter());
        registry.addConverter(getCommentszayavokremontToStringConverter());
        registry.addConverter(getIdToCommentszayavokremontConverter());
        registry.addConverter(getStringToCommentszayavokremontConverter());
        registry.addConverter(getCommutatorToStringConverter());
        registry.addConverter(getIdToCommutatorConverter());
        registry.addConverter(getStringToCommutatorConverter());
        registry.addConverter(getCsbalancedateToStringConverter());
        registry.addConverter(getIdToCsbalancedateConverter());
        registry.addConverter(getStringToCsbalancedateConverter());
        registry.addConverter(getDeviceToStringConverter());
        registry.addConverter(getIdToDeviceConverter());
        registry.addConverter(getStringToDeviceConverter());
        registry.addConverter(getDevicetypeToStringConverter());
        registry.addConverter(getIdToDevicetypeConverter());
        registry.addConverter(getStringToDevicetypeConverter());
        registry.addConverter(getDogovoraToStringConverter());
        registry.addConverter(getIdToDogovoraConverter());
        registry.addConverter(getStringToDogovoraConverter());
        registry.addConverter(getDoljnostToStringConverter());
        registry.addConverter(getIdToDoljnostConverter());
        registry.addConverter(getStringToDoljnostConverter());
        registry.addConverter(getManagerToStringConverter());
        registry.addConverter(getIdToManagerConverter());
        registry.addConverter(getStringToManagerConverter());
        registry.addConverter(getOcherednapodkluchenieToStringConverter());
        registry.addConverter(getIdToOcherednapodkluchenieConverter());
        registry.addConverter(getStringToOcherednapodkluchenieConverter());
        registry.addConverter(getPaymentToStringConverter());
        registry.addConverter(getIdToPaymentConverter());
        registry.addConverter(getStringToPaymentConverter());
        registry.addConverter(getPhoneToStringConverter());
        registry.addConverter(getIdToPhoneConverter());
        registry.addConverter(getStringToPhoneConverter());
        registry.addConverter(getProverkatahvozmToStringConverter());
        registry.addConverter(getIdToProverkatahvozmConverter());
        registry.addConverter(getStringToProverkatahvozmConverter());
        registry.addConverter(getRateToStringConverter());
        registry.addConverter(getIdToRateConverter());
        registry.addConverter(getStringToRateConverter());
        registry.addConverter(getSchetToStringConverter());
        registry.addConverter(getIdToSchetConverter());
        registry.addConverter(getStringToSchetConverter());
        registry.addConverter(getServiceToStringConverter());
        registry.addConverter(getIdToServiceConverter());
        registry.addConverter(getStringToServiceConverter());
        registry.addConverter(getSipToStringConverter());
        registry.addConverter(getIdToSipConverter());
        registry.addConverter(getStringToSipConverter());
        registry.addConverter(getStatuslicaToStringConverter());
        registry.addConverter(getIdToStatuslicaConverter());
        registry.addConverter(getStringToStatuslicaConverter());
        registry.addConverter(getSupplierToStringConverter());
        registry.addConverter(getIdToSupplierConverter());
        registry.addConverter(getStringToSupplierConverter());
        registry.addConverter(getTempblockToStringConverter());
        registry.addConverter(getIdToTempblockConverter());
        registry.addConverter(getStringToTempblockConverter());
        registry.addConverter(getWishToStringConverter());
        registry.addConverter(getIdToWishConverter());
        registry.addConverter(getStringToWishConverter());
        registry.addConverter(getYurstatusToStringConverter());
        registry.addConverter(getIdToYurstatusConverter());
        registry.addConverter(getStringToYurstatusConverter());
        registry.addConverter(getZayavkanaremontToStringConverter());
        registry.addConverter(getIdToZayavkanaremontConverter());
        registry.addConverter(getStringToZayavkanaremontConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
