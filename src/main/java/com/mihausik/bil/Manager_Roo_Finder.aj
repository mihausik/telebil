// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.mihausik.bil;

import com.mihausik.bil.Manager;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;

privileged aspect Manager_Roo_Finder {
    
    public static Long Manager.countFindManagersByLoginEquals(String login) {
        if (login == null || login.length() == 0) throw new IllegalArgumentException("The login argument is required");
        EntityManager em = Manager.entityManager();
        TypedQuery q = em.createQuery("SELECT COUNT(o) FROM Manager AS o WHERE o.login = :login", Long.class);
        q.setParameter("login", login);
        return ((Long) q.getSingleResult());
    }
    
    public static TypedQuery<Manager> Manager.findManagersByLoginEquals(String login) {
        if (login == null || login.length() == 0) throw new IllegalArgumentException("The login argument is required");
        EntityManager em = Manager.entityManager();
        TypedQuery<Manager> q = em.createQuery("SELECT o FROM Manager AS o WHERE o.login = :login", Manager.class);
        q.setParameter("login", login);
        return q;
    }
    
    public static TypedQuery<Manager> Manager.findManagersByLoginEquals(String login, String sortFieldName, String sortOrder) {
        if (login == null || login.length() == 0) throw new IllegalArgumentException("The login argument is required");
        EntityManager em = Manager.entityManager();
        StringBuilder queryBuilder = new StringBuilder("SELECT o FROM Manager AS o WHERE o.login = :login");
        if (fieldNames4OrderClauseFilter.contains(sortFieldName)) {
            queryBuilder.append(" ORDER BY ").append(sortFieldName);
            if ("ASC".equalsIgnoreCase(sortOrder) || "DESC".equalsIgnoreCase(sortOrder)) {
                queryBuilder.append(" ").append(sortOrder);
            }
        }
        TypedQuery<Manager> q = em.createQuery(queryBuilder.toString(), Manager.class);
        q.setParameter("login", login);
        return q;
    }
    
}
